https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/


class Solution {
public:
    int findPivot ( vector<int>& nums )
    {
        int low = 0 , high = nums.size()-1 , n = nums.size() ;
        if ( low == high ) return nums[low] ;
        while ( low <= high )
        {
            int mid =  ((high-low)/2) + low ; 
            int prev = ( mid-1 + n ) % n  ;
            int next = ( mid + 1 ) % n ; 
           
            if ( (nums[mid] < nums[prev] )and (nums[mid] < nums[next]) ) return nums[mid] ;
            if ( nums[low] <= nums[mid]  )
            {
                prev = ( low -1 + n ) % n ; 
                if ( nums[low] < nums[prev] ) return nums[low] ;
                low = mid+1 ;
            }
            else
            {
                high = mid-1 ; 
            }
        }
        return -1 ; 
    }
    int findMin(vector<int>& nums) {
        
        return findPivot ( nums ) ;
    }
};
