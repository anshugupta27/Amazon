https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/


class Solution {
public:
    int LeftPosition ( vector<int> &nums , int target )
    {
        int low = 0 , high = nums.size()-1 , Ans = -1;
        while ( low <= high )
        {
            int mid = ( (high-low)/2 ) + low ; 
            if ( nums[mid] >= target )
            {
                if ( nums[mid] == target )
                {Ans = mid ; }
                high = mid-1 ; 
            }
            else low = mid+1 ; 
        }
        return Ans ; 
    }
    int RightPosition ( vector<int> &nums , int target )
    {
        int low = 0 , high = nums.size()-1 , Ans = -1 ;
        while ( low <= high )
        {
            int mid = ( (high-low)/2 ) + low ; 
            if ( nums[mid] <= target )
            {
                if ( nums[mid] == target )
                {Ans = mid ; }
                low = mid+1 ; 
            }
            else high = mid-1 ;
           
        }
        return Ans ; 
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int left = LeftPosition ( nums , target ) ;
        int right = RightPosition ( nums , target ) ;
        vector<int> finalAns ;
        finalAns.push_back ( left ) ;
        finalAns.push_back ( right ) ;
        return finalAns ; 
    }
};
